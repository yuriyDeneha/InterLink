import java.util.ArrayList; 
import java.util.List; 

interface Illness{
	public String treatment();	
  	public void describe();
}
abstract class Infection implements Illness{
	public abstract String cough();
}
abstract class Cancer implements Illness{
	public abstract String hope();
}
class Cold extends Infection{
  public String treatment(){
   	return "Hot tea";
  }	
   public String cough(){
   	return "Coughing...";
  }
  public void describe(){
    System.out.println( "Cold: treatment- " + this.treatment() + "; action - " + this.cough());
  }    
}
class LungsCancer extends Cancer{
  public String treatment(){
   	return "Surgery";
  }	
  public String hope(){
   	return"Weep...";
  }
  public void describe(){
    System.out.println( "LungsCancer: treatment- " + this.treatment() + "; action - " + this.hope());
  }    
}
class BrainCancer extends Cancer{
  public String treatment(){
   	return "Prays";
  }	
  public String hope(){
   	return "Praying...";
  }
  public void describe(){
    System.out.println( "BrainCancer: treatment- " + this.treatment() + "; action - " + this.hope());
  }    
}
class Box {
	public List<Illness> box = new ArrayList<Illness>();
	public void Add(Illness ill){
		box.add(ill);
	}
	public void DesribeAll(){
		for(Illness ill: box) {
			ill.describe();
		}
	}
}
public class Polymorphism
{
	public static void main(String[] args)
	{
		Box box = new Box();		
		Illness t = new Cold();
		Illness c = new LungsCancer();
		Illness s = new BrainCancer();	
			
		box.Add(t);
		box.Add(c);
		box.Add(s);
		box.DesribeAll();
	}
}
